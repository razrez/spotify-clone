@{
    Layout = "MainLayout";
    ViewData["Title"] = "User";
}

<head>
    <link rel="stylesheet" href="~/css/play-button.css" asp-append-version="true"/>
</head>
<div class="content-spacing">
    <div class="user-header">
        <div>&nbsp;</div>
        <div class="user-info">
            <div class="user-img"></div>
            <div class="block-info">
                <div class="type">PROFILE</div>
                <div class="user-name">Salavat Gilyazetdinov</div>
                <div class="short-content">1 Public Playlists</div>
            </div>
        </div>
    </div> 
    <div class="user-body">
        <div class="user-interaction">
            <a href="/account/editprofile" class="edit-button" style="color: white">EDIT PROFILE</a>
        </div>
        <div class="user-releases">
            <div class="content-header">
                <div class="playlists-header loading">
                        <p style="width: 500px">Your playlists</p>
                </div>
                <div class="content-block">
                    <a class="content-type">Public Playlists</a>
                </div>
                <a href="#" class="see-all">SEE ALL</a>
            </div>
            <div class="content-body" id="playlists"></div>
        </div>
    </div>
</div>
@*<script src="~/js/play-button.js"></script>*@
<script src="~/js/getUserProfile.js"></script>
<script>
async function showUserLibrary() {
    let container = document.getElementById('playlists');
    container.innerHTML = "";
    fetch(`${api}/auth/validate_token`,{
        method: "GET",
        headers: {
            "Authorization": `Bearer ${getToken()}`
        }
        })
        .then(response => response.json())
        .then(async res => {
            await fetch(`${api}/user/content/playlists/${res['id']}`)
                .then(response => response.json())
                .then(playlists => {
                    playlists.map(playlist => {
                        container.appendChild(new PlaylistCard(
                            (playlist['imgSrc'] ?? ""),
                            playlist['title'],
                            playlistTypes[playlist['playlistType']],
                            playlist['id'],
                            (playlist['username'] ?? playlist['userId']))
                            .render()
                        )   
                    })
                })
        })
        .catch(() => {
            history.pushState(null, '', "/");
            window.location.href = "/Account/Login";
        });
    toggleLoading(document.querySelector(".playlists-header"))
}

$(document).ready(showUserLibrary);

$(window).bind('popstate', function(){
    $( document ).ajaxStop(() => {
        if (window.location.pathname === '/User/Index'){
            showUserLibrary();
        }
    });
});
$(".uLib").click(function (){
    $( document ).ajaxStop(() => {
        if (window.location.pathname === '/User/Index'){
            showUserLibrary();
        }
    });
});
</script>

